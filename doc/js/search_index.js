var search_data = {"index":{"searchIndex":["activesupport","testcase","applicationcable","channel","connection","connectiontest","applicationcontroller","applicationjob","applicationmailer","applicationrecord","applicationservice","appliedcontrollertest","appliedhelper","appliescontroller","appliesservice","apply","applytest","createapplies","createjobs","createusers","current","job","jobtest","jobscontroller","jobscontrollertest","jobsservice","jwtservice","object","rubyonrailspostgrestest","application","sessionscontroller","sessionsservice","user","usertest","usersservice","activate_bundler()","activation_error_handling()","apply()","authentication()","authentication_session()","bundler_requirement()","bundler_requirement_for()","call()","change()","change()","change()","cli_arg_version()","create()","create()","create()","create()","current_user()","decode_user_data()","destroy()","destroy()","encode_user_data()","env_var_version()","gemfile()","get_by_email()","get_by_id()","get_by_language()","get_by_language()","get_by_title()","get_by_title()","index()","invoked_as_script?()","job()","job=()","jobs()","jobs_with_full_salary()","jwt_service()","load_bundler!()","lockfile()","lockfile_version()","login()","login()","logout()","model()","model()","model()","new()","new()","new()","new()","new()","new()","password()","password=()","show()","signup()","signup()","system!()","token()","update()","update()","update_jobs()","user_session()","users_service()","gemfile","gemfile.lock","readme","rakefile","config.ru","credentials.yml.enc","master.key","_resource_header.html.haml","_resource_method.html.haml","beautify.js","index.html.haml","prettify.css","prettify.js","scripts.js","styles.css","development.log","robots","development_secret","restart"],"longSearchIndex":["activesupport","activesupport::testcase","applicationcable","applicationcable::channel","applicationcable::connection","applicationcable::connectiontest","applicationcontroller","applicationjob","applicationmailer","applicationrecord","applicationservice","appliedcontrollertest","appliedhelper","appliescontroller","appliesservice","apply","applytest","createapplies","createjobs","createusers","current","job","jobtest","jobscontroller","jobscontrollertest","jobsservice","jwtservice","object","rubyonrailspostgrestest","rubyonrailspostgrestest::application","sessionscontroller","sessionsservice","user","usertest","usersservice","object#activate_bundler()","object#activation_error_handling()","appliesservice#apply()","applicationcontroller#authentication()","sessionsservice#authentication_session()","object#bundler_requirement()","object#bundler_requirement_for()","applicationservice::call()","createapplies#change()","createjobs#change()","createusers#change()","object#cli_arg_version()","appliescontroller#create()","appliesservice#create()","jobscontroller#create()","jobsservice#create()","applicationcontroller#current_user()","jwtservice#decode_user_data()","jobscontroller#destroy()","jobsservice#destroy()","jwtservice#encode_user_data()","object#env_var_version()","object#gemfile()","usersservice#get_by_email()","usersservice#get_by_id()","jobscontroller#get_by_language()","jobsservice#get_by_language()","jobscontroller#get_by_title()","jobsservice#get_by_title()","jobscontroller#index()","object#invoked_as_script?()","jobsservice#job()","jobsservice#job=()","jobsservice#jobs()","jobsservice#jobs_with_full_salary()","sessionsservice#jwt_service()","object#load_bundler!()","object#lockfile()","object#lockfile_version()","sessionscontroller#login()","sessionsservice#login()","sessionscontroller#logout()","appliesservice#model()","jobsservice#model()","usersservice#model()","appliescontroller::new()","appliesservice::new()","jobscontroller::new()","jobsservice::new()","sessionscontroller::new()","sessionsservice::new()","user#password()","user#password=()","jobscontroller#show()","sessionscontroller#signup()","sessionsservice#signup()","object#system!()","sessionsservice#token()","jobscontroller#update()","jobsservice#update()","usersservice#update_jobs()","sessionsservice#user_session()","sessionsservice#users_service()","","","","","","","","","","","","","","","","","","",""],"info":[["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationCable::ConnectionTest","","ApplicationCable/ConnectionTest.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["ApplicationService","","ApplicationService.html","",""],["AppliedControllerTest","","AppliedControllerTest.html","",""],["AppliedHelper","","AppliedHelper.html","",""],["AppliesController","","AppliesController.html","","<p>This class manage the request when a user applied for a job.\n"],["AppliesService","","AppliesService.html","",""],["Apply","","Apply.html","",""],["ApplyTest","","ApplyTest.html","",""],["CreateApplies","","CreateApplies.html","",""],["CreateJobs","","CreateJobs.html","",""],["CreateUsers","","CreateUsers.html","",""],["Current","","Current.html","",""],["Job","","Job.html","",""],["JobTest","","JobTest.html","",""],["JobsController","","JobsController.html","",""],["JobsControllerTest","","JobsControllerTest.html","",""],["JobsService","","JobsService.html","",""],["JwtService","","JwtService.html","",""],["Object","","Object.html","",""],["RubyOnRailsPostgresTest","","RubyOnRailsPostgresTest.html","",""],["RubyOnRailsPostgresTest::Application","","RubyOnRailsPostgresTest/Application.html","",""],["SessionsController","","SessionsController.html","",""],["SessionsService","","SessionsService.html","",""],["User","","User.html","",""],["UserTest","","UserTest.html","",""],["UsersService","","UsersService.html","",""],["activate_bundler","Object","Object.html#method-i-activate_bundler","()",""],["activation_error_handling","Object","Object.html#method-i-activation_error_handling","()",""],["apply","AppliesService","AppliesService.html#method-i-apply","()","<p>Function to get current Apply element\n"],["authentication","ApplicationController","ApplicationController.html#method-i-authentication","()","<p>Function to analyze the token in the cookies\n"],["authentication_session","SessionsService","SessionsService.html#method-i-authentication_session","(authentication)","<p>Function to authorize the user from token\n<p>params authentication:string token authentication\n"],["bundler_requirement","Object","Object.html#method-i-bundler_requirement","()",""],["bundler_requirement_for","Object","Object.html#method-i-bundler_requirement_for","(version)",""],["call","ApplicationService","ApplicationService.html#method-c-call","(*args, &block)",""],["change","CreateApplies","CreateApplies.html#method-i-change","()",""],["change","CreateJobs","CreateJobs.html#method-i-change","()",""],["change","CreateUsers","CreateUsers.html#method-i-change","()",""],["cli_arg_version","Object","Object.html#method-i-cli_arg_version","()",""],["create","AppliesController","AppliesController.html#method-i-create","()","<p>Function to analyze the request create user\n<p>params job_id:string id of the job to applied params user_id …\n"],["create","AppliesService","AppliesService.html#method-i-create","(job_id, user_id)","<p>Function to create a new apply\n<p>params job_id:string id of the job to applied params user_id:integer id …\n"],["create","JobsController","JobsController.html#method-i-create","()","<p>Function to analyze the request create job\n<p>params languages:array languages spoken of the job params dates:array[many …\n"],["create","JobsService","JobsService.html#method-i-create","(job_params, spoken_languages, shift_dates, user_id)","<p>Function to execute request, creat job\n<p>params spoken_languages:array spoken languages of the job params …\n"],["current_user","ApplicationController","ApplicationController.html#method-i-current_user","()","<p>Function to get the current user connected\n"],["decode_user_data","JwtService","JwtService.html#method-i-decode_user_data","(token)","<p>Function decrypt token\n"],["destroy","JobsController","JobsController.html#method-i-destroy","()","<p>Function to analyze the request delete job\n<p>params id:string id of the job to delete\n<p>DELETE /jobs/1\n"],["destroy","JobsService","JobsService.html#method-i-destroy","()","<p>Function to execute request, delete current job\n"],["encode_user_data","JwtService","JwtService.html#method-i-encode_user_data","(payload)","<p>Function encrypt payload with HS256 algorithm\n"],["env_var_version","Object","Object.html#method-i-env_var_version","()",""],["gemfile","Object","Object.html#method-i-gemfile","()",""],["get_by_email","UsersService","UsersService.html#method-i-get_by_email","(email)","<p>Function to execute request, find user by email\n<p>params email:string email of the user to find\n"],["get_by_id","UsersService","UsersService.html#method-i-get_by_id","(id)","<p>Function to execute request, find user by id\n<p>params id:string id of the user to find\n"],["get_by_language","JobsController","JobsController.html#method-i-get_by_language","()","<p>Function to analyze the request get jobs by spoken language\n<p>params languages:array languages spoken of …\n"],["get_by_language","JobsService","JobsService.html#method-i-get_by_language","(language)","<p>Function to execute request, find job by language\n<p>params language:string language of the job to find\n"],["get_by_title","JobsController","JobsController.html#method-i-get_by_title","()","<p>Function to analyze the request get jobs by title\n<p>params title:string title of the jobs to find\n<p>GET /jobs/title/ …\n"],["get_by_title","JobsService","JobsService.html#method-i-get_by_title","(title)","<p>Function to execute request, find job by title\n<p>params title:string title of the job to find\n"],["index","JobsController","JobsController.html#method-i-index","()","<p>Function to analyze the request get all job\n<p>GET /jobs\n"],["invoked_as_script?","Object","Object.html#method-i-invoked_as_script-3F","()",""],["job","JobsService","JobsService.html#method-i-job","()","<p>Function to get current Job element\n"],["job=","JobsService","JobsService.html#method-i-job-3D","(id)","<p>Function to get job by id\n<p>params id:string id of the job to find\n"],["jobs","JobsService","JobsService.html#method-i-jobs","()","<p>Function to execute request, get all the Jobs\n"],["jobs_with_full_salary","JobsService","JobsService.html#method-i-jobs_with_full_salary","()","<p>Function to execute request, get all the Jobs\n"],["jwt_service","SessionsService","SessionsService.html#method-i-jwt_service","()","<p>Funtion to get jwt service intense\n"],["load_bundler!","Object","Object.html#method-i-load_bundler-21","()",""],["lockfile","Object","Object.html#method-i-lockfile","()",""],["lockfile_version","Object","Object.html#method-i-lockfile_version","()",""],["login","SessionsController","SessionsController.html#method-i-login","()","<p>Function to analyze the request login user and set Authorization token in cookies\n<p>params email:string …\n"],["login","SessionsService","SessionsService.html#method-i-login","(email, password)","<p>Function to execute request, login\n<p>params email:string email of user params password:string password of …\n"],["logout","SessionsController","SessionsController.html#method-i-logout","()","<p>Function to analyze the request logout user and delete Authorization in the cookies\n<p>permit email:string …\n"],["model","AppliesService","AppliesService.html#method-i-model","()","<p>Function to get Apply model class functions\n"],["model","JobsService","JobsService.html#method-i-model","()","<p>Function to get job model class functions\n"],["model","UsersService","UsersService.html#method-i-model","()","<p>Function to get User model class functions\n"],["new","AppliesController","AppliesController.html#method-c-new","()","<p>initialize the apply service from AppliesService class which will execute the requests of AppliesController …\n"],["new","AppliesService","AppliesService.html#method-c-new","()","<p>initialize the job service from JobsService class which will execute job requests for ApplicationService …\n"],["new","JobsController","JobsController.html#method-c-new","()","<p>initialize the job service from JobsService class which will execute the requests of JobsController\n"],["new","JobsService","JobsService.html#method-c-new","()","<p>initialize the user service from UsersService which will execute user requests for JobsController.\n"],["new","SessionsController","SessionsController.html#method-c-new","()","<p>initialize the session service from SessionsService class which will execute the requests of SessionsController …\n"],["new","SessionsService","SessionsService.html#method-c-new","()","<p>initialize the user service from UsersService class which will execute the requests of SessionsController …\n"],["password","User","User.html#method-i-password","()","<p>Function to decrypt password\n"],["password=","User","User.html#method-i-password-3D","(new_password)","<p>Function to encrypt and save the password\n"],["show","JobsController","JobsController.html#method-i-show","()","<p>Function to analyze the request show job content\n<p>params id:string id of the job to display\n<p>GET /jobs/:id …\n"],["signup","SessionsController","SessionsController.html#method-i-signup","()","<p>Function to analyze the request sign up user\n<p>params email:string email of user params password:string …\n"],["signup","SessionsService","SessionsService.html#method-i-signup","(email, password)","<p>Function to execute request, signup\n<p>params email:string email of user params password:string password …\n"],["system!","Object","Object.html#method-i-system-21","(*args)",""],["token","SessionsService","SessionsService.html#method-i-token","()","<p>Funtion to get the user token\n"],["update","JobsController","JobsController.html#method-i-update","()","<p>Function to analyze the request create job\n<p>params id:string id of the job to update params languages:array …\n"],["update","JobsService","JobsService.html#method-i-update","(job_params)","<p>Function to execute request, update job\n<p>params job_params:hash with:\n\n<pre>id:string id of the job to update ...</pre>\n"],["update_jobs","UsersService","UsersService.html#method-i-update_jobs","(user_id, job)","<p>Function to execute request, create job, we store which job the user created\n<p>params user_id:string id …\n"],["user_session","SessionsService","SessionsService.html#method-i-user_session","(email = nil)",""],["users_service","SessionsService","SessionsService.html#method-i-users_service","()","<p>Funtion to get user service intense\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org” git_source(:github) { |repo| “github.com/#{repo}.git” }\n<p>ruby …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actioncable (7.0.1)\n    actionpack (= 7.0.1)\n    activesupport ...</pre>\n"],["README","","README_md.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and ...\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for example lib/tasks/capistrano.rake …\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative “config/environment” …\n"],["credentials.yml.enc","","config/credentials_yml_enc.html","","<p>Q1cU1Vk/3afy+3nIajZAKCydb04jubmvQkxGA+djU8tWTdk0g8Ggk78in9Dz3DcwmfaidyZ1x5dOF0gNkPa75Yy1qlf4ja1Lsd9j7IHVkIi1Lcy/WTjILrXVBNJBsSwMyKCWVvoCvNRxh/Zeiv076oOCl++CzZTdh3uBUo+mgS1gHIciWyQ4Lur8vsNypMZwhTc294C3N+ZpREZfPWERfUPp02Jq9ay+DDbu7PCF/rZIIMwFH+gJSoS4xog4QbrivlVtSYda/zG8RxyqYEoIu2s7fMBH2DmNDSzUQpTpVOii38Oan4+AamE0HR1NQsWM0+3XL6Vx+9qauA0JNN4IuEdFUp1e17mkvK7CQEWOvDFzv1y+Pn3PneehaCBBAd5nVEaIOcU+qFTTKmQwiggAKjK2XTu4dApFLmH+–bTENDkp7TsY6ofZ2–dtELvB+GTZCqPMQ/pimEmA== …\n"],["master.key","","config/master_key.html","","<p>457591e3a7e5778ede313371907ef10c\n"],["_resource_header.html.haml","","config/rapi_doc/_resource_header_html_haml.html","","<p>.resource_header\n\n<pre>%h2= @name\n%p.resource_summary= @content\n- if @xml || @json\n  %h3 Representations\n  - ...</pre>\n"],["_resource_method.html.haml","","config/rapi_doc/_resource_method_html_haml.html","","<p>.resource_methods\n\n<pre>%a{:id =&gt; &quot;#{@resource_name}_method_#{@method_order}&quot;}\n%h2.api-name= @name\n%h2.api-url.blue= ...</pre>\n"],["beautify.js","","config/rapi_doc/beautify_js.html","","<p>/*jslint onevar: false, plusplus: false */ /*\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">JS</span> <span class=\"ruby-constant\">Beautifier</span>\n</pre>\n\n<pre>Written by Einar Lielmanis, &lt;einar@jsbeautifier.org&gt; ...</pre>\n"],["index.html.haml","","config/rapi_doc/index_html_haml.html","","<p>!!! %html\n\n<pre>%head\n  %meta{:content =&gt; &quot;text/html; charset=utf-8&quot;, &quot;http-equiv&quot; =&gt; &quot;Content-Type&quot;}/\n  %link{:href ...</pre>\n"],["prettify.css","","config/rapi_doc/prettify_css.html","","<p>.pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.pun,.opn,.clo{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media …\n"],["prettify.js","","config/rapi_doc/prettify_js.html","","<p>// Copyright © 2006 Google Inc. // // Licensed under the Apache License, Version 2.0 (the “License”); …\n"],["scripts.js","","config/rapi_doc/scripts_js.html","","<p>/**\n\n<pre>* created by: salilwadnerkar\n* Date: 11/4/12\n*/\n\nhelper = {\n   pretty_print: function(source_selector){ ...</pre>\n"],["styles.css","","config/rapi_doc/styles_css.html","","<p>html, body {\n\n<pre>width: 100%;\nheight: 100%;\nmargin: 0;\nfont-family: Helvetica,Arial,sans-serif;</pre>\n<p>}\n"],["development.log","","log/development_log.html","","<p>Started GET “/” for 127.0.0.1 at 2022-02-06 17:17:59 +0100\n\n<pre>\u001b[1m\u001b[36mActiveRecord::SchemaMigration ...</pre>\n"],["robots","","public/robots_txt.html","","<p># See www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n"],["development_secret","","tmp/development_secret_txt.html","","<p>013873f98b84c84061d920c74fe5c1d6f54d8262a4cacf9aa33835a7b14ef70348f5881ea33e1aa89d1d5f2f3a1206c17ef64119571ebd73333fa62f2d865c80 …\n"],["restart","","tmp/restart_txt.html","",""]]}}